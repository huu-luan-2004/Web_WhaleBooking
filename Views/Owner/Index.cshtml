@{
    ViewData["Title"] = "Cơ sở của tôi";
}

<div class="d-flex justify-content-between align-items-center mt-4 mb-3">
    <h3>Cơ sở của tôi</h3>
    <div>
        <a class="btn btn-primary" href="/Owner/Create">+ Tạo cơ sở</a>
    </div>
</div>

<div class="row g-2 mb-3">
    <div class="col-auto">
        <input id="txtSearch" class="form-control" placeholder="Tìm theo tên..." />
    </div>
    <div class="col-auto">
        <button id="btnSearch" class="btn btn-outline-secondary">Tìm</button>
    </div>
</div>

<div id="alertMessage" class="alert d-none" role="alert"></div>
<div id="list" class="row g-3"></div>

@section Scripts {
<script>
(function(){
    // Guard: only ChuCoSo can access (Admin/KhachHang: cấm)
    if (!WhaleBooking.auth.isOwner()) {
        WhaleBooking.ui.showAlert('Bạn không có quyền đăng nhập', 'danger');
        window.location.href = '/Auth/Login';
        return;
    }

    const listEl = document.getElementById('list');

    // Chuẩn hoá trạng thái duyệt cơ sở từ nhiều schema khác nhau
    function computeApprovalStatus(item){
        // Ưu tiên các field trạng thái duyệt chuyên biệt
        let v = item?.trangThaiDuyet ?? item?.tinhTrangDuyet ?? item?.duyet ?? item?.approvalStatus ?? item?.approvalState ?? item?.approvedStatus ?? item?.ApprovalStatus ?? item?.ApprovedStatus;
        let state = null; // 'approved' | 'pending' | 'rejected'
        if (typeof v === 'number') {
            // 0: pending, 1: approved, 2: rejected (giả định phổ biến)
            state = v === 1 ? 'approved' : (v === 2 ? 'rejected' : 'pending');
        } else if (typeof v === 'string') {
            const s = v.toLowerCase();
            if (['approved','đã duyệt','daduyet','approve','duyet','1','true'].includes(s)) state = 'approved';
            else if (['rejected','từ chối','bi tu choi','bị từ chối','reject','2'].includes(s)) state = 'rejected';
            else if (['pending','chờ duyệt','choduyet','0','false','waiting','review'].includes(s)) state = 'pending';
        }
        // Fallback: booleans
        if (!state) {
            const approvedBool = item?.isApproved ?? item?.daDuyet ?? item?.Approved ?? item?.approved;
            const rejectedBool = item?.isRejected ?? item?.biTuChoi ?? item?.Rejected ?? item?.rejected;
            if (rejectedBool === true) state = 'rejected';
            else if (approvedBool === true) state = 'approved';
            else if (approvedBool === false) state = 'pending';
        }
        // Default
        if (!state) state = 'pending';
        const text = state === 'approved' ? 'Đã duyệt' : state === 'rejected' ? 'Bị từ chối' : 'Chờ duyệt';
        const className = state === 'approved' ? 'bg-success' : state === 'rejected' ? 'bg-danger' : 'bg-warning text-dark';
        return { state, text, className };
    }

    function render(items){
        listEl.innerHTML = '';
        if (!items || items.length === 0) {
            listEl.innerHTML = '<div class="text-muted">Chưa có cơ sở nào</div>';
            return;
        }
        items.forEach(it => {
            const col = document.createElement('div');
            col.className = 'col-md-4';
            const appr = computeApprovalStatus(it);
            const img = WhaleBooking.api.fullImageUrl(it.imageUrl || it.avatarUrl);
            col.innerHTML = `
                <div class="card h-100">
                    <img src="${img}" class="card-img-top" style="object-fit:cover;height:180px;" onclick="location.href='/Owner/Details/${it.id}'" role="button">
                    <div class="card-body">
                        <h5 class="card-title">
                            <a href="/Owner/Details/${it.id}" class="text-decoration-none">${it.tenCoSo || it.name || 'Cơ sở'}</a>
                        </h5>
                        <p class="card-text small mb-1">Trạng thái duyệt: <span class="badge ${appr.className}">${appr.text}</span></p>
                        <div class="d-flex gap-2">
                            <a class="btn btn-sm btn-outline-info" href="/Owner/Details/${it.id}">Chi tiết</a>
                            <a class="btn btn-sm btn-outline-primary" href="/Owner/Edit/${it.id}">Sửa</a>
                            <a class="btn btn-sm btn-outline-secondary" href="/Owner/Rooms?coSoId=${it.id}">Phòng</a>
                            <button class="btn btn-sm btn-outline-danger" data-id="${it.id}">Xóa</button>
                        </div>
                    </div>
                </div>`;
            listEl.appendChild(col);
        });

        // Bind delete
        listEl.querySelectorAll('button.btn-outline-danger').forEach(btn => {
            btn.addEventListener('click', async () => {
                if (!confirm('Xóa cơ sở này?')) return;
                const id = btn.getAttribute('data-id');
                const res = await WhaleBooking.api.call(`/cosoluutru/${id}`, { method: 'DELETE' });
                if (res && res.success) {
                    WhaleBooking.ui.showAlert('Đã xóa', 'success');
                    load();
                } else {
                    WhaleBooking.ui.showAlert((res && res.message) || 'Xóa thất bại', 'danger');
                }
            });
        });
    }

    async function load(page=1) {
        const q = document.getElementById('txtSearch').value || '';
        const url = `/cosoluutru?page=${page}&pageSize=20${q ? `&q=${encodeURIComponent(q)}` : ''}`;
        const res = await WhaleBooking.api.call(url, { method: 'GET' });
        render((res && res.data) || res || []);
    }

    document.getElementById('btnSearch').addEventListener('click', () => load(1));

    load();
})();
</script>
}
